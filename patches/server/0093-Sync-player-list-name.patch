From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PureGero <puregero@gmail.com>
Date: Thu, 30 Dec 2021 22:43:43 +1000
Subject: [PATCH] Sync player list name


diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index 36faf2d1ac58b61f482a1f93d40d097469ed2acf..0622aa079988b17db605601bbdb1bb0fa9f2b238 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -141,6 +141,7 @@ import org.jetbrains.annotations.NotNull;
 import net.md_5.bungee.api.chat.BaseComponent; // Spigot
 import puregero.multipaper.MultiPaper;
 import puregero.multipaper.externalserverprotocol.PlayerDataUpdatePacket;
+import puregero.multipaper.externalserverprotocol.PlayerListNameUpdatePacket;
 
 @DelegateDeserialization(CraftOfflinePlayer.class)
 public class CraftPlayer extends CraftHumanEntity implements Player {
@@ -413,6 +414,7 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
                 player.connection.send(new ClientboundPlayerInfoPacket(ClientboundPlayerInfoPacket.Action.UPDATE_DISPLAY_NAME, getHandle()));
             }
         }
+        MultiPaper.broadcastPacketToExternalServers(getHandle(), new PlayerListNameUpdatePacket(getHandle())); // MultiPaper
     }
     @Override
     public net.kyori.adventure.text.Component playerListName() {
@@ -443,6 +445,7 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
                 player.connection.send(new ClientboundPlayerInfoPacket(ClientboundPlayerInfoPacket.Action.UPDATE_DISPLAY_NAME, this.getHandle()));
             }
         }
+        MultiPaper.broadcastPacketToExternalServers(getHandle(), new PlayerListNameUpdatePacket(getHandle())); // MultiPaper
     }
 
     private net.kyori.adventure.text.Component playerListHeader; // Paper - Adventure
diff --git a/src/main/java/puregero/multipaper/externalserverprotocol/ExternalServerPacketSerializer.java b/src/main/java/puregero/multipaper/externalserverprotocol/ExternalServerPacketSerializer.java
index 4563f2147be9f78bdd2d26603081ea335ba088c0..e872517a5d23323328f15185707773dafdffe978 100644
--- a/src/main/java/puregero/multipaper/externalserverprotocol/ExternalServerPacketSerializer.java
+++ b/src/main/java/puregero/multipaper/externalserverprotocol/ExternalServerPacketSerializer.java
@@ -51,6 +51,7 @@ public class ExternalServerPacketSerializer {
         addPacket(WeatherUpdatePacket.class, WeatherUpdatePacket::new);
         addPacket(PlayerStatsIncreasePacket.class, PlayerStatsIncreasePacket::new);
         addPacket(PlayerExperienceUpdatePacket.class, PlayerExperienceUpdatePacket::new);
+        addPacket(PlayerListNameUpdatePacket.class, PlayerListNameUpdatePacket::new);
     }
 
     private static void addPacket(Class<? extends ExternalServerPacket> clazz, IOExceptionFunction<DataInputStream, ExternalServerPacket> deserializer) {
diff --git a/src/main/java/puregero/multipaper/externalserverprotocol/PlayerCreatePacket.java b/src/main/java/puregero/multipaper/externalserverprotocol/PlayerCreatePacket.java
index 20e5c37e9b5a500281e8c23f4fce302ea117b378..193bc5592e22a68ebbecb5db9cb2a9c21ab529dc 100644
--- a/src/main/java/puregero/multipaper/externalserverprotocol/PlayerCreatePacket.java
+++ b/src/main/java/puregero/multipaper/externalserverprotocol/PlayerCreatePacket.java
@@ -113,6 +113,7 @@ public class PlayerCreatePacket extends ExternalServerPacket {
         connection.send(new SendPacketPacket(player, new ClientboundSetCarriedItemPacket(player.getInventory().selected)));
         connection.send(new EntityUpdatePacket(player, new ClientboundSetEntityDataPacket(player.getId(), player.getEntityData(), true)));
         connection.send(new PlayerFoodUpdatePacket(player));
+        connection.send(new PlayerListNameUpdatePacket(player));
 
         MultiPaperInventoryHandler.sendFullInventoryUpdate(connection, player);
         MultiPaperEnderChestHandler.sendFullEnderChestUpdate(connection, player);
diff --git a/src/main/java/puregero/multipaper/externalserverprotocol/PlayerListNameUpdatePacket.java b/src/main/java/puregero/multipaper/externalserverprotocol/PlayerListNameUpdatePacket.java
new file mode 100644
index 0000000000000000000000000000000000000000..5b3f40eb5679f88a395294b80fe01739272a18de
--- /dev/null
+++ b/src/main/java/puregero/multipaper/externalserverprotocol/PlayerListNameUpdatePacket.java
@@ -0,0 +1,52 @@
+package puregero.multipaper.externalserverprotocol;
+
+import net.minecraft.network.chat.Component;
+import net.minecraft.network.protocol.game.ClientboundPlayerInfoPacket;
+import net.minecraft.server.MinecraftServer;
+import net.minecraft.server.level.ServerPlayer;
+import puregero.multipaper.ExternalServerConnection;
+import puregero.multipaper.MultiPaper;
+
+import java.io.DataInputStream;
+import java.io.DataOutputStream;
+import java.io.IOException;
+import java.util.UUID;
+
+public class PlayerListNameUpdatePacket extends ExternalServerPacket {
+
+    private final UUID uuid;
+    private final Component listName;
+
+    public PlayerListNameUpdatePacket(ServerPlayer player) {
+        this.uuid = player.getUUID();
+        this.listName = player.listName;
+    }
+
+    public PlayerListNameUpdatePacket(DataInputStream in) throws IOException {
+        uuid = readUUID(in);
+        listName = Component.Serializer.fromJson(in.readUTF());
+    }
+
+    @Override
+    public void write(DataOutputStream out) throws IOException {
+        writeUUID(out, uuid);
+        out.writeUTF(Component.Serializer.toJson(listName));
+    }
+
+    @Override
+    public void handle(ExternalServerConnection connection) {
+        MultiPaper.runSync(() -> {
+            ServerPlayer player = MinecraftServer.getServer().getPlayerList().getPlayer(uuid);
+
+            if (player != null) {
+                player.listName = listName;
+
+                for (ServerPlayer receiver : player.server.getPlayerList().players) {
+                    if (MultiPaper.isRealPlayer(receiver) && receiver.getBukkitEntity().canSee(player.getBukkitEntity())) {
+                        receiver.connection.send(new ClientboundPlayerInfoPacket(ClientboundPlayerInfoPacket.Action.UPDATE_DISPLAY_NAME, player));
+                    }
+                }
+            }
+        });
+    }
+}
