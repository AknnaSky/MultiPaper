From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PureGero <puregero@gmail.com>
Date: Sat, 10 Apr 2021 19:03:33 +1000
Subject: [PATCH] Remove player from server's player list before moving servers


diff --git a/src/main/java/puregero/multipaper/MultiPaperConnection.java b/src/main/java/puregero/multipaper/MultiPaperConnection.java
index 2ed46d0e5f2d579402c0ca9537f98c3bbd51a903..a6ff69d7b5e548c96b458436641f33a48fd85da0 100644
--- a/src/main/java/puregero/multipaper/MultiPaperConnection.java
+++ b/src/main/java/puregero/multipaper/MultiPaperConnection.java
@@ -26,6 +26,7 @@ import java.util.*;
 import java.util.concurrent.CompletableFuture;
 import java.util.concurrent.ConcurrentHashMap;
 import java.util.function.Consumer;
+import java.util.stream.Collectors;
 import java.util.zip.DeflaterOutputStream;
 import java.util.zip.InflaterInputStream;
 
@@ -300,7 +301,8 @@ public class MultiPaperConnection extends Thread {
             out.writeInt(0);
             out.send(null);
         } else if (!MinecraftServer.getServer().isStopped()) {
-            Collection<? extends Player> players = Bukkit.getOnlinePlayers();
+            Collection<? extends Player> players = Bukkit.getOnlinePlayers()
+                    .stream().filter(player -> !((CraftPlayer) player).getHandle().isBeingSentToAnotherServer).collect(Collectors.toList());
             out.writeUTF("playerList");
             out.writeDouble(MinecraftServer.getServer().recentTps[0]);
             out.writeInt(players.size());
diff --git a/src/main/java/puregero/multipaper/Zone.java b/src/main/java/puregero/multipaper/Zone.java
index cc548cc592aefcee3579594297267f40c428e50d..277d3a928db6c239f4e299ccdd93be5cd52219e9 100644
--- a/src/main/java/puregero/multipaper/Zone.java
+++ b/src/main/java/puregero/multipaper/Zone.java
@@ -34,6 +34,10 @@ public class Zone implements Iterable<Chunk> {
 
         for (Player player : players) {
             ((CraftPlayer) player).getHandle().isBeingSentToAnotherServer = true;
+            MultiPaper.sendPlayerUpdate(player, false);
+        }
+        
+        for (Player player : players) {
             LOGGER.info("Sending " + player.getName() + " to server " + server + ". Does the chunk they're in need saving? "
                     + (player.getLocation().isChunkLoaded() && ((CraftChunk) player.getChunk()).getHandle().isNeedsSaving()));
             player.kick(Component.text("sendto:" + server));
