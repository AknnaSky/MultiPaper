From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PureGero <puregero@gmail.com>
Date: Sat, 10 Apr 2021 19:03:33 +1000
Subject: [PATCH] Remove player from server's player list before moving servers


diff --git a/src/main/java/puregero/multipaper/MultiPaperConnection.java b/src/main/java/puregero/multipaper/MultiPaperConnection.java
index 3f79735ab10913b801e63a77a8480b1e19e48303..39a4666828dee016dab5f94e98143574dd3f44eb 100644
--- a/src/main/java/puregero/multipaper/MultiPaperConnection.java
+++ b/src/main/java/puregero/multipaper/MultiPaperConnection.java
@@ -26,6 +26,7 @@ import java.util.*;
 import java.util.concurrent.CompletableFuture;
 import java.util.concurrent.ConcurrentHashMap;
 import java.util.function.Consumer;
+import java.util.stream.Collectors;
 import java.util.zip.DeflaterOutputStream;
 import java.util.zip.InflaterInputStream;
 
@@ -299,7 +300,8 @@ public class MultiPaperConnection extends Thread {
             out.writeInt(0);
             out.send(null);
         } else if (!MinecraftServer.getServer().isStopped()) {
-            Collection<? extends Player> players = Bukkit.getOnlinePlayers();
+            Collection<? extends Player> players = Bukkit.getOnlinePlayers()
+                    .stream().filter(player -> !((CraftPlayer) player).getHandle().isBeingSentToAnotherServer).collect(Collectors.toList());
             out.writeUTF("playerList");
             out.writeDouble(MinecraftServer.getServer().recentTps[0]);
             out.writeInt(players.size());
diff --git a/src/main/java/puregero/multipaper/Zone.java b/src/main/java/puregero/multipaper/Zone.java
index 02d883863d57775db9d0aa344a1175a1b77c0fc3..458310c049e928da5b27bfd197080188acaa169f 100644
--- a/src/main/java/puregero/multipaper/Zone.java
+++ b/src/main/java/puregero/multipaper/Zone.java
@@ -34,6 +34,10 @@ public class Zone implements Iterable<Chunk> {
 
         for (Player player : players) {
             ((CraftPlayer) player).getHandle().isBeingSentToAnotherServer = true;
+            MultiPaper.sendPlayerUpdate(player, false);
+        }
+        
+        for (Player player : players) {
             LOGGER.info("Sending " + player.getName() + " to server " + server + ". Does the chunk they're in need saving? "
                     + (player.getLocation().isChunkLoaded() && ((CraftChunk) player.getChunk()).getHandle().isUnsaved()));
             player.kick(Component.text("sendto:" + server));
