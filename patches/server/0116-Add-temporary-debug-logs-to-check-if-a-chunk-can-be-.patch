From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PureGero <puregero@gmail.com>
Date: Tue, 18 Jan 2022 11:15:07 +1000
Subject: [PATCH] Add temporary debug logs to check if a chunk can be not fully
 loaded


diff --git a/src/main/java/net/minecraft/server/level/ServerChunkCache.java b/src/main/java/net/minecraft/server/level/ServerChunkCache.java
index 2aaa0ae43858706a6098898bc984d5a7a6b0d0bd..e0551c713a60c39371338dbd6c8aaee4432efe5e 100644
--- a/src/main/java/net/minecraft/server/level/ServerChunkCache.java
+++ b/src/main/java/net/minecraft/server/level/ServerChunkCache.java
@@ -347,6 +347,9 @@ public class ServerChunkCache extends ChunkSource {
         // try to fire sync
         int chunkStatusTicketLevel = 33 + ChunkStatus.getDistance(status);
         ChunkHolder playerChunk = this.chunkMap.getUpdatingChunkIfPresent(io.papermc.paper.util.CoordinateUtils.getChunkKey(chunkX, chunkZ));
+        if (playerChunk == null && this.chunkMap.getVisibleChunkIfPresent(io.papermc.paper.util.CoordinateUtils.getChunkKey(chunkX, chunkZ)) != null) {
+            LOGGER.warn("Trying to load chunk asynchronously but it's a visible chunk " + chunkX + "," + chunkZ);
+        }
         if (playerChunk != null) {
             ChunkStatus holderStatus = playerChunk.getChunkHolderStatus();
             ChunkAccess immediate = playerChunk.getAvailableChunkNow();
@@ -1029,6 +1032,14 @@ public class ServerChunkCache extends ChunkSource {
                 // Paper end - optimise chunk tick iteration
                 ChunkPos chunkcoordintpair = chunk1.getPos();
 
+                if (!chunk1.loaded) {
+                    LOGGER.warn(chunk1 + " isn't loaded!");
+                }
+
+                if (getVisibleChunkIfPresent(chunk1.getPos().longKey) == null) {
+                    LOGGER.warn(chunk1 + " isn't in the visible chunks!");
+                }
+
                 // MultiPaper start - Don't tick this chunk if we don't own it
                 boolean isTicking = chunkMap.getDistanceManager().inEntityTickingRange(chunkcoordintpair.longKey);
                 if (isTicking && !chunk1.hasExternalLockRequest) MultiPaper.lockChunk(chunk1);
