From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PureGero <puregero@gmail.com>
Date: Sun, 20 Mar 2022 23:32:19 +1000
Subject: [PATCH] Add a timeout when saving chunks

This allows the server to exit cleanly instead of hanging forever
waiting for chunks to never finish loading.

diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index 70add49244cf00656548ec1e07fc2542d6d5ef35..9186756dcb6a3319cdf55216d554857da83f62a8 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -48,6 +48,7 @@ import java.util.Set;
 import java.util.UUID;
 import java.util.concurrent.CompletableFuture;
 import java.util.concurrent.Executor;
+import java.util.concurrent.TimeUnit;
 import java.util.concurrent.atomic.AtomicReference;
 import java.util.function.BooleanSupplier;
 import java.util.function.Consumer;
@@ -280,6 +281,7 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
     private final ServerFunctionManager functionManager;
     private final FrameTimer frameTimer;
     private boolean enforceWhitelist;
+    public CompletableFuture<Void> saveTimeout = new CompletableFuture<>(); // MultiPaper
     private float averageTickTime;
     public final Executor executor;
     @Nullable
@@ -1065,6 +1067,7 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
         }
 
         MinecraftServer.LOGGER.info("Saving worlds");
+        saveTimeout = saveTimeout.completeOnTimeout(null, 30, TimeUnit.SECONDS); // MultiPaper
         Iterator iterator = this.getAllLevels().iterator();
 
         ServerLevel worldserver;
diff --git a/src/main/java/net/minecraft/server/level/ChunkMap.java b/src/main/java/net/minecraft/server/level/ChunkMap.java
index 2c4407abf7ffc1cdf1d4ceccf95e0a662f917d0a..14e7541b6da593773e36c32dadee12ef3d62f1e3 100644
--- a/src/main/java/net/minecraft/server/level/ChunkMap.java
+++ b/src/main/java/net/minecraft/server/level/ChunkMap.java
@@ -918,16 +918,20 @@ public class ChunkMap extends ChunkStorage implements ChunkHolder.PlayerProvider
                 mutableboolean.setFalse();
                 list.stream().map((playerchunk) -> {
                     CompletableFuture completablefuture;
+                    CompletableFuture timeoutable; // MultiPaper - add timeout
 
                     do {
                         completablefuture = playerchunk.getChunkToSave();
                         BlockableEventLoop iasynctaskhandler = this.mainThreadExecutor;
 
                         Objects.requireNonNull(completablefuture);
-                        iasynctaskhandler.managedBlock(completablefuture::isDone);
+                        timeoutable = CompletableFuture.anyOf(completablefuture, level.getServer().saveTimeout); // MultiPaper - add timeout
+                        iasynctaskhandler.managedBlock(timeoutable::isDone); // MultiPaper - add timeout
                     } while (completablefuture != playerchunk.getChunkToSave());
 
-                    return (ChunkAccess) completablefuture.join();
+                    if (!completablefuture.isDone()) LOGGER.warn("Timed out while waiting for chunk " + playerchunk.getWorld().getWorld().getName() + playerchunk.getPos() + " to finish loading, skipping saving it.");  // MultiPaper - add timeout
+
+                    return (ChunkAccess) timeoutable.join();  // MultiPaper - add timeout
                 }).filter((ichunkaccess) -> {
                     return ichunkaccess instanceof ImposterProtoChunk || ichunkaccess instanceof LevelChunk;
                 }).filter(this::save).forEach((ichunkaccess) -> {
