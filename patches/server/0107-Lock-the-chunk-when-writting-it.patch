From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PureGero <puregero@gmail.com>
Date: Sun, 16 Jan 2022 11:51:16 +1000
Subject: [PATCH] Lock the chunk when writting it


diff --git a/src/main/java/net/minecraft/server/level/ChunkMap.java b/src/main/java/net/minecraft/server/level/ChunkMap.java
index 1bd0227dc091974be7dbc7a60468e7aa8755bd6c..937ba63e5f47e300ede06ee8f438e9f48c437437 100644
--- a/src/main/java/net/minecraft/server/level/ChunkMap.java
+++ b/src/main/java/net/minecraft/server/level/ChunkMap.java
@@ -1473,6 +1473,7 @@ public class ChunkMap extends ChunkStorage implements ChunkHolder.PlayerProvider
             asyncSaveData = ChunkSerializer.getAsyncSaveData(this.level, chunk);
         }
 
+        MultiPaper.willSaveChunk(level, chunk);
         this.level.asyncChunkTaskManager.scheduleChunkSave(chunkPos.x, chunkPos.z, com.destroystokyo.paper.io.PrioritizedTaskQueue.NORMAL_PRIORITY,
             asyncSaveData, chunk);
 
diff --git a/src/main/java/puregero/multipaper/MultiPaper.java b/src/main/java/puregero/multipaper/MultiPaper.java
index 771197cb3bffa13415b7017f9410e099442445fd..4f8dbc04cf1b1824d0eb55f30e3c11b0331993e5 100644
--- a/src/main/java/puregero/multipaper/MultiPaper.java
+++ b/src/main/java/puregero/multipaper/MultiPaper.java
@@ -485,6 +485,10 @@ public class MultiPaper {
         }
     }
 
+    public static void willSaveChunk(ServerLevel level, ChunkAccess chunk) {
+        getConnection().willSaveChunk(level.getWorld().getName(), chunk.locX, chunk.locZ);
+    }
+
     public static byte[] nbtToBytes(CompoundTag compoundTag) throws IOException {
         if (compoundTag == null) {
             return new byte[0];
diff --git a/src/main/java/puregero/multipaper/MultiPaperConnection.java b/src/main/java/puregero/multipaper/MultiPaperConnection.java
index fc7f58fbbe96d017aea13c181a0947275ee33838..c7532db00991cfe681567f8340bf86957c3c4a2f 100644
--- a/src/main/java/puregero/multipaper/MultiPaperConnection.java
+++ b/src/main/java/puregero/multipaper/MultiPaperConnection.java
@@ -828,4 +828,17 @@ public class MultiPaperConnection extends Thread {
             e.printStackTrace();
         }
     }
+
+    public void willSaveChunk(String world, int cx, int cz) {
+        try {
+            DataOutputSender out = new DataOutputSender(this);
+            out.writeUTF("willSaveChunk");
+            out.writeUTF(world);
+            out.writeInt(cx);
+            out.writeInt(cz);
+            out.send(null);
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+    }
 }
