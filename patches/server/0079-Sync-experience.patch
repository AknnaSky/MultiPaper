From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PureGero <puregero@gmail.com>
Date: Tue, 21 Dec 2021 00:37:18 +1000
Subject: [PATCH] Sync experience


diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index 87933a19ec2abff599bab3a3aa26ee6238ce0553..226aa61bf8f43147c8c859433c479488e5283ec7 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -592,6 +592,20 @@ public class ServerPlayer extends Player {
         this.lastSentExp = -1;
     }
 
+    // MultiPaper start - sync xp
+    public float lastExperienceProgress = 0;
+    public int lastTotalExperience = 0;
+    public int lastExperienceLevel = 0;
+    public void syncExperience() {
+        if (experienceProgress != lastExperienceProgress || totalExperience != lastTotalExperience || experienceLevel != lastExperienceLevel) {
+            lastExperienceProgress = experienceProgress;
+            lastTotalExperience = totalExperience;
+            lastExperienceLevel = experienceLevel;
+            MultiPaper.broadcastPacketToExternalServers(new PlayerExperienceUpdatePacket(this, experienceProgress, totalExperience, experienceLevel));
+        }
+    }
+    // MultiPaper end
+
     public void initMenu(AbstractContainerMenu screenHandler) {
         screenHandler.addSlotListener(this.containerListener);
         screenHandler.setSynchronizer(this.containerSynchronizer);
diff --git a/src/main/java/puregero/multipaper/MultiPaper.java b/src/main/java/puregero/multipaper/MultiPaper.java
index 83ee406265020e77a6122c27530a9b8275f54620..df3317351977135627afc27dc110f710b0fdee1c 100644
--- a/src/main/java/puregero/multipaper/MultiPaper.java
+++ b/src/main/java/puregero/multipaper/MultiPaper.java
@@ -203,6 +203,8 @@ public class MultiPaper {
                 player.detectEquipmentUpdates();
                 player.tickAttackStrength();
             }
+
+            player.syncExperience();
         }
 
         MultiPaperExternalBlocksHandler.tick();
diff --git a/src/main/java/puregero/multipaper/PlayerExperienceUpdatePacket.java b/src/main/java/puregero/multipaper/PlayerExperienceUpdatePacket.java
new file mode 100644
index 0000000000000000000000000000000000000000..fd9348fad3113766b0f5cfb3067d45f83b6c5def
--- /dev/null
+++ b/src/main/java/puregero/multipaper/PlayerExperienceUpdatePacket.java
@@ -0,0 +1,50 @@
+package puregero.multipaper;
+
+import net.minecraft.server.MinecraftServer;
+import net.minecraft.server.level.ServerPlayer;
+import puregero.multipaper.externalserverprotocol.ExternalServerPacket;
+
+import java.io.DataInputStream;
+import java.io.DataOutputStream;
+import java.io.IOException;
+import java.util.UUID;
+
+public class PlayerExperienceUpdatePacket extends ExternalServerPacket {
+    private final UUID uuid;
+    private final float progress;
+    private final int total;
+    private final int level;
+
+    public PlayerExperienceUpdatePacket(ServerPlayer player, float progress, int total, int level) {
+        this.uuid = player.getUUID();
+        this.progress = progress;
+        this.total = total;
+        this.level = level;
+    }
+
+    public PlayerExperienceUpdatePacket(DataInputStream in) throws IOException {
+        uuid = readUUID(in);
+        progress = in.readFloat();
+        total = in.readInt();
+        level = in.readInt();
+    }
+
+    @Override
+    public void write(DataOutputStream out) throws IOException {
+        writeUUID(out, uuid);
+        out.writeFloat(progress);
+        out.writeInt(total);
+        out.writeInt(level);
+    }
+
+    @Override
+    public void handle(ExternalServerConnection connection) {
+        MultiPaper.runSync(() -> {
+            ServerPlayer player = MinecraftServer.getServer().getPlayerList().getPlayer(uuid);
+
+            player.experienceProgress = player.lastExperienceProgress = progress;
+            player.totalExperience = player.lastTotalExperience = total;
+            player.experienceLevel = player.lastExperienceLevel = level;
+        });
+    }
+}
diff --git a/src/main/java/puregero/multipaper/externalserverprotocol/ExternalServerPacketSerializer.java b/src/main/java/puregero/multipaper/externalserverprotocol/ExternalServerPacketSerializer.java
index 39b2b3ada17b28ce6fd1b9c42f2497ebb8db5c5f..4563f2147be9f78bdd2d26603081ea335ba088c0 100644
--- a/src/main/java/puregero/multipaper/externalserverprotocol/ExternalServerPacketSerializer.java
+++ b/src/main/java/puregero/multipaper/externalserverprotocol/ExternalServerPacketSerializer.java
@@ -1,5 +1,7 @@
 package puregero.multipaper.externalserverprotocol;
 
+import puregero.multipaper.PlayerExperienceUpdatePacket;
+
 import java.io.DataInputStream;
 import java.io.DataOutputStream;
 import java.io.EOFException;
@@ -48,6 +50,7 @@ public class ExternalServerPacketSerializer {
         addPacket(AdvancementGrantProgressPacket.class, AdvancementGrantProgressPacket::new);
         addPacket(WeatherUpdatePacket.class, WeatherUpdatePacket::new);
         addPacket(PlayerStatsIncreasePacket.class, PlayerStatsIncreasePacket::new);
+        addPacket(PlayerExperienceUpdatePacket.class, PlayerExperienceUpdatePacket::new);
     }
 
     private static void addPacket(Class<? extends ExternalServerPacket> clazz, IOExceptionFunction<DataInputStream, ExternalServerPacket> deserializer) {
