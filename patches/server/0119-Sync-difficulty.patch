From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PureGero <puregero@gmail.com>
Date: Mon, 31 Jan 2022 21:14:15 +1000
Subject: [PATCH] Sync difficulty


diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index d811d63d35c7a31bc2f82b31b919361f2b01a3c4..868e1f664b6f0e906b6fcc6a37d01aba892fac5d 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -187,6 +187,7 @@ import co.aikar.timings.MinecraftTimings; // Paper
 import org.spigotmc.SlackActivityAccountant; // Spigot
 import puregero.multipaper.MultiPaper;
 import puregero.multipaper.MultiPaperExternalBlocksHandler;
+import puregero.multipaper.externalserverprotocol.DifficultyUpdatePacket;
 
 public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTask> implements CommandSource, AutoCloseable {
 
@@ -1815,6 +1816,7 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
             level.setSpawnSettings(worldData.getDifficulty() != Difficulty.PEACEFUL && ((DedicatedServer) this).settings.getProperties().spawnMonsters, this.isSpawningAnimals());
             // this.getPlayerList().getPlayers().forEach(this::sendDifficultyUpdate);
             // Paper end
+            if (!DifficultyUpdatePacket.updatingDifficulty) MultiPaper.broadcastPacketToExternalServers(level.getWorld().getName(), new DifficultyUpdatePacket(level)); // MultiPaper
         }
     }
 
diff --git a/src/main/java/puregero/multipaper/externalserverprotocol/DifficultyUpdatePacket.java b/src/main/java/puregero/multipaper/externalserverprotocol/DifficultyUpdatePacket.java
new file mode 100644
index 0000000000000000000000000000000000000000..4e6dd7e379a4e7d61383e518ed19f8b53ae48fc2
--- /dev/null
+++ b/src/main/java/puregero/multipaper/externalserverprotocol/DifficultyUpdatePacket.java
@@ -0,0 +1,47 @@
+package puregero.multipaper.externalserverprotocol;
+
+import net.minecraft.server.level.ServerLevel;
+import net.minecraft.world.Difficulty;
+import org.bukkit.Bukkit;
+import org.bukkit.World;
+import org.bukkit.craftbukkit.CraftWorld;
+import puregero.multipaper.ExternalServerConnection;
+import puregero.multipaper.MultiPaper;
+
+import java.io.IOException;
+
+public class DifficultyUpdatePacket extends ExternalServerPacket {
+
+    public static boolean updatingDifficulty = false;
+
+    private final String world;
+    private final String difficulty;
+
+    public DifficultyUpdatePacket(ServerLevel level) {
+        this.world = level.getWorld().getName();
+        this.difficulty = level.serverLevelData.getDifficulty().getKey();
+    }
+
+    public DifficultyUpdatePacket(FriendlyDataInputStream in) throws IOException {
+        world = in.readUTF();
+        difficulty = in.readUTF();
+    }
+
+    @Override
+    public void write(FriendlyDataOutputStream out) throws IOException {
+        out.writeUTF(world);
+        out.writeUTF(difficulty);
+    }
+
+    @Override
+    public void handle(ExternalServerConnection connection) {
+        MultiPaper.runSync(() -> {
+            World bukkitWorld = Bukkit.getWorld(world);
+            if (bukkitWorld instanceof CraftWorld craftWorld) {
+                updatingDifficulty = true;
+                craftWorld.getHandle().getServer().setDifficulty(craftWorld.getHandle(), Difficulty.byName(difficulty), true);
+                updatingDifficulty = false;
+            }
+        });
+    }
+}
diff --git a/src/main/java/puregero/multipaper/externalserverprotocol/ExternalServerPacketSerializer.java b/src/main/java/puregero/multipaper/externalserverprotocol/ExternalServerPacketSerializer.java
index c39fc67694896237b6029cedc75359b5cf9b824d..8a6eaa248e2f8ec6f48119e75bd6eeca0322725f 100644
--- a/src/main/java/puregero/multipaper/externalserverprotocol/ExternalServerPacketSerializer.java
+++ b/src/main/java/puregero/multipaper/externalserverprotocol/ExternalServerPacketSerializer.java
@@ -50,6 +50,7 @@ public class ExternalServerPacketSerializer {
         addPacket(PlayerListNameUpdatePacket.class, PlayerListNameUpdatePacket::new);
         addPacket(PlayerSetCameraPacket.class, PlayerSetCameraPacket::new);
         addPacket(PlayerSetRespawnPosition.class, PlayerSetRespawnPosition::new);
+        addPacket(DifficultyUpdatePacket.class, DifficultyUpdatePacket::new);
     }
 
     private static void addPacket(Class<? extends ExternalServerPacket> clazz, IOExceptionFunction<FriendlyDataInputStream, ExternalServerPacket> deserializer) {
