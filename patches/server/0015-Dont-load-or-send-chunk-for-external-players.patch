From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PureGero <puregero@gmail.com>
Date: Thu, 2 Dec 2021 09:17:26 +1000
Subject: [PATCH] Dont load or send chunk for external players


diff --git a/src/main/java/io/papermc/paper/chunk/system/RegionizedPlayerChunkLoader.java b/src/main/java/io/papermc/paper/chunk/system/RegionizedPlayerChunkLoader.java
index 924539d4ac50c70178ba220424ffacd6ff277c8b..a8cfdade0a992baaf9b5649ae34410d0e6964336 100644
--- a/src/main/java/io/papermc/paper/chunk/system/RegionizedPlayerChunkLoader.java
+++ b/src/main/java/io/papermc/paper/chunk/system/RegionizedPlayerChunkLoader.java
@@ -32,6 +32,8 @@ import net.minecraft.world.level.levelgen.BelowZeroRetrogen;
 import org.apache.commons.lang3.mutable.MutableObject;
 import org.bukkit.craftbukkit.entity.CraftPlayer;
 import org.bukkit.entity.Player;
+import puregero.multipaper.MultiPaper;
+
 import java.lang.invoke.VarHandle;
 import java.util.ArrayDeque;
 import java.util.concurrent.TimeUnit;
@@ -125,7 +127,7 @@ public class RegionizedPlayerChunkLoader {
 
     public void addPlayer(final ServerPlayer player) {
         TickThread.ensureTickThread(player, "Cannot add player to player chunk loader async");
-        if (!player.isRealPlayer) {
+        if (MultiPaper.isExternalPlayer(player) || !player.isRealPlayer) { // MultiPaper
             return;
         }
 
diff --git a/src/main/java/net/minecraft/server/level/ChunkMap.java b/src/main/java/net/minecraft/server/level/ChunkMap.java
index 319c469c20f3cb4f6d61425bfa6d98b55b55c4d6..25b1c17ba63e6d8270f2ce550fddcfd822cedbd1 100644
--- a/src/main/java/net/minecraft/server/level/ChunkMap.java
+++ b/src/main/java/net/minecraft/server/level/ChunkMap.java
@@ -116,6 +116,7 @@ import org.bukkit.entity.Player;
 // CraftBukkit end
 
 import it.unimi.dsi.fastutil.objects.ReferenceOpenHashSet; // Paper
+import puregero.multipaper.MultiPaper;
 
 public class ChunkMap extends ChunkStorage implements ChunkHolder.PlayerProvider {
 
@@ -1100,7 +1101,7 @@ public class ChunkMap extends ChunkStorage implements ChunkHolder.PlayerProvider
     }
 
     private boolean skipPlayer(ServerPlayer player) {
-        return player.isSpectator() && !this.level.getGameRules().getBoolean(GameRules.RULE_SPECTATORSGENERATECHUNKS);
+        return MultiPaper.isExternalPlayer(player) || (player.isSpectator() && !this.level.getGameRules().getBoolean(GameRules.RULE_SPECTATORSGENERATECHUNKS)); // MultiPaper - skip external players
     }
 
     void updatePlayerStatus(ServerPlayer player, boolean added) {
@@ -1543,7 +1544,7 @@ public class ChunkMap extends ChunkStorage implements ChunkHolder.PlayerProvider
 
         public void updatePlayer(ServerPlayer player) {
             org.spigotmc.AsyncCatcher.catchOp("player tracker update"); // Spigot
-            if (player != this.entity) {
+            if (player != this.entity && MultiPaper.isRealPlayer(player)) { // MultiPaper - don't track for external players
                 // Paper start - remove allocation of Vec3D here
                 // Vec3 vec3d = player.position().subtract(this.entity.position());
                 double vec3d_dx = player.getX() - this.entity.getX();
