From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PureGero <puregero@gmail.com>
Date: Sun, 21 Mar 2021 14:34:24 +1000
Subject: [PATCH] Add calls to garbage collector while saving chunks when the
 server is stopping


diff --git a/src/main/java/puregero/multipaper/MultiPaper.java b/src/main/java/puregero/multipaper/MultiPaper.java
index f9806f17769f2b796b10cb46085c7aa4d4c2680f..1b98b924ec39866fb8e8966ff4a8ee0565019fee 100644
--- a/src/main/java/puregero/multipaper/MultiPaper.java
+++ b/src/main/java/puregero/multipaper/MultiPaper.java
@@ -39,6 +39,8 @@ public class MultiPaper {
         boolean hasBeen10Seconds = last10Seconds < System.currentTimeMillis() - 10 * 1000;
 
         if (hasBeen10Seconds) last10Seconds = System.currentTimeMillis();
+        
+        checkIfPlayersNeedToBeMoved();
 
         Bukkit.getWorlds().forEach(world -> {
             WorldPersistentData persistentData = ((CraftWorld) world).getHandle().getWorldPersistentData();
@@ -50,6 +52,24 @@ public class MultiPaper {
         });
     }
 
+    private static void checkIfPlayersNeedToBeMoved() {
+        for (Player player : Bukkit.getOnlinePlayers()) {
+            if (!Zone.isBeingSentToAnotherServer(player) && player.getLastLogin() < System.currentTimeMillis() - 5 * 1000L) {
+                for (ExternalServer server : getConnection().getServersMap().values()) {
+                    if (server.isAlive() && !server.isMe()) {
+                        for (UUID uuid : server.getPlayers()) {
+                            Location location = getConnection().playerLocations.get(uuid);
+                            if (Bukkit.getPlayer(uuid) == null && location != null && location.getWorld() == player.getWorld()
+                                    && chunkDistance(player.getLocation(), location) <= (10 + Bukkit.getViewDistance()) * 2) {
+                                Zone.doMerge(player.getChunk(), server.getName());
+                            }
+                        }
+                    }
+                }
+            }
+        }
+    }
+
     public static NBTTagCompound readChunk(ChunkCoordIntPair chunkcoordintpair, WorldServer worldServer) throws IOException {
         return readRegionFileNBT(worldServer, "region", chunkcoordintpair);
     }
@@ -338,11 +358,19 @@ public class MultiPaper {
     }
 
     private static int chunkDistance(Entity entity1, Entity entity2) {
-        return Math.max(Math.abs(entity1.chunkX - entity2.chunkX), Math.abs(entity1.chunkZ - entity2.chunkZ));
+        return chunkDistance(entity1.chunkX, entity1.chunkZ, entity2.chunkX, entity2.chunkZ);
+    }
+
+    private static int chunkDistance(Location loc1, Location loc2) {
+        return chunkDistance(loc1.getBlockX() >> 4, loc1.getBlockZ() >> 4, loc2.getBlockX() >> 4, loc2.getBlockZ() >> 4);
     }
 
     private static int chunkDistance(Entity entity, Chunk chunk) {
-        return Math.max(Math.abs(entity.chunkX - chunk.getPos().x), Math.abs(entity.chunkZ - chunk.getPos().z));
+        return chunkDistance(entity.chunkX, entity.chunkZ, chunk.getPos().x, chunk.getPos().z);
+    }
+
+    private static int chunkDistance(int cx1, int cz1, int cx2, int cz2) {
+        return Math.max(Math.abs(cx1 - cx2), Math.abs(cz1 - cz2));
     }
     
     public static boolean isPlayerSafe(EntityHuman player) {
diff --git a/src/main/java/puregero/multipaper/Zone.java b/src/main/java/puregero/multipaper/Zone.java
index d1eb086dcad9fb21da5eab429b02bd08ea77fcef..0af5b293700418776e4b127146372a6d271dc0fb 100644
--- a/src/main/java/puregero/multipaper/Zone.java
+++ b/src/main/java/puregero/multipaper/Zone.java
@@ -155,8 +155,12 @@ public class Zone {
 
         WorldServer worldServer = ((CraftChunk) chunk).getHandle().world;
         if (worldServer.getMinecraftServer().hasStopped()) {
+            LOGGER.info("Server is stopping, running garbage collector before flushing chunk writes");
+            System.gc();
             LOGGER.info("Server is stopping, flushing chunk writes");
             worldServer.asyncChunkTaskManager.flush();
+            LOGGER.info("Server is stopping, running garbage collector after flushing chunk writes");
+            System.gc();
         }
 
         try {
