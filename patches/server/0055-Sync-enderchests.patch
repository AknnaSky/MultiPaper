From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PureGero <puregero@gmail.com>
Date: Sat, 4 Dec 2021 12:23:17 +1000
Subject: [PATCH] Sync enderchests


diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index 747989a3c7c2019c4cffb4ad86474f6debe37692..4debf47f563b38e4890fae477f638c1fbd683a1b 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -166,6 +166,7 @@ import org.bukkit.event.player.PlayerTeleportEvent.TeleportCause;
 import org.bukkit.inventory.MainHand;
 import puregero.multipaper.ExternalServer;
 import puregero.multipaper.MultiPaper;
+import puregero.multipaper.MultiPaperEnderChestHandler;
 import puregero.multipaper.externalserverprotocol.PlayerChangeDimensionPacket;
 import puregero.multipaper.externalserverprotocol.PlayerChangeGamemodePacket;
 import puregero.multipaper.externalserverprotocol.PlayerCreatePacket;
@@ -337,6 +338,7 @@ public class ServerPlayer extends Player {
         this.bukkitPickUpLoot = true;
         this.maxHealthCache = this.getMaxHealth();
         this.cachedSingleMobDistanceMap = new com.destroystokyo.paper.util.PooledHashSets.PooledObjectLinkedOpenHashSet<>(this); // Paper
+        enderChestInventory.addListener(new MultiPaperEnderChestHandler(this)); // MultiPaper
     }
     // Paper start - Chunk priority
     public BlockPos getPointInFront(double inFront) {
diff --git a/src/main/java/puregero/multipaper/MultiPaperEnderChestHandler.java b/src/main/java/puregero/multipaper/MultiPaperEnderChestHandler.java
new file mode 100644
index 0000000000000000000000000000000000000000..977eb7fa3df228fd602652ea64b4cb42e3e21ba4
--- /dev/null
+++ b/src/main/java/puregero/multipaper/MultiPaperEnderChestHandler.java
@@ -0,0 +1,78 @@
+package puregero.multipaper;
+
+import net.minecraft.nbt.CompoundTag;
+import net.minecraft.nbt.ListTag;
+import net.minecraft.server.level.ServerPlayer;
+import net.minecraft.world.Container;
+import net.minecraft.world.ContainerListener;
+import net.minecraft.world.item.ItemStack;
+import org.bukkit.Bukkit;
+import org.bukkit.craftbukkit.scheduler.CraftScheduler;
+import puregero.multipaper.externalserverprotocol.PlayerInventoryUpdatePacket;
+
+public class MultiPaperEnderChestHandler implements ContainerListener {
+
+    private static boolean broadcastChanges = true;
+
+    private final ServerPlayer player;
+    private ItemStack[] sentItems = new ItemStack[0];
+
+    public MultiPaperEnderChestHandler(ServerPlayer player) {
+        this.player = player;
+    }
+
+    @Override
+    public void containerChanged(Container container) {
+        if (container.getContainerSize() != sentItems.length) {
+            sentItems = new ItemStack[container.getContainerSize()];
+        }
+
+        if (!player.didPlayerJoinEvent && broadcastChanges) {
+            // Wait till they join to broadcast changes
+            ((CraftScheduler) Bukkit.getScheduler()).scheduleInternalTask(() -> containerChanged(container), 1, "MultiPaperEnderChestHandler-containerChanged");
+            return;
+        }
+
+        CompoundTag itemsRoot = new CompoundTag();
+        ListTag items = new ListTag();
+        for (int i = 0; i < sentItems.length; i++) {
+            ItemStack item = container.getItem(i);
+            if (!item.equals(sentItems[i])) {
+                sentItems[i] = item.copy();
+
+                if (broadcastChanges) {
+                    CompoundTag itemToSend = new CompoundTag();
+                    itemToSend.putInt("Slot", i);
+                    item.save(itemToSend);
+                    items.add(itemToSend);
+                }
+            }
+        }
+
+        if (!items.isEmpty()) {
+            itemsRoot.put("items", items);
+            MultiPaper.broadcastPacketToExternalServers(new PlayerInventoryUpdatePacket(player, "enderchest", itemsRoot));
+        }
+    }
+
+    public static void sendFullEnderChestUpdate(ExternalServerConnection connection, ServerPlayer player) {
+        CompoundTag itemsRoot = new CompoundTag();
+        ListTag items = new ListTag();
+        for (int i = 0; i < player.getEnderChestInventory().getContainerSize(); i++) {
+            ItemStack item = player.getEnderChestInventory().getItem(i);
+            CompoundTag itemToSend = new CompoundTag();
+            itemToSend.putInt("Slot", i);
+            item.save(itemToSend);
+            items.add(itemToSend);
+        }
+
+        itemsRoot.put("items", items);
+        connection.send(new PlayerInventoryUpdatePacket(player, "enderchest", itemsRoot));
+    }
+
+    public static void updateInventory(ServerPlayer player, int slot, ItemStack item) {
+        broadcastChanges = false;
+        player.getEnderChestInventory().setItem(slot, item);
+        broadcastChanges = true;
+    }
+}
diff --git a/src/main/java/puregero/multipaper/MultiPaperInventoryHandler.java b/src/main/java/puregero/multipaper/MultiPaperInventoryHandler.java
index 140299c05bce61d3f3a87e04200fecfb0be5c57f..6e5a4c0a27680da5f277eb8df9ff0aa3b48845f6 100644
--- a/src/main/java/puregero/multipaper/MultiPaperInventoryHandler.java
+++ b/src/main/java/puregero/multipaper/MultiPaperInventoryHandler.java
@@ -106,6 +106,7 @@ public class MultiPaperInventoryHandler {
             case "items" -> player.getInventory().items.set(slot, item);
             case "armor" -> player.getInventory().armor.set(slot, item);
             case "offhand" -> player.getInventory().offhand.set(slot, item);
+            case "enderchest" -> MultiPaperEnderChestHandler.updateInventory(player, slot, item);
             default -> throw new IllegalArgumentException("Unknown inventory component of " + name);
         }
         item.dirty = false;
diff --git a/src/main/java/puregero/multipaper/externalserverprotocol/PlayerCreatePacket.java b/src/main/java/puregero/multipaper/externalserverprotocol/PlayerCreatePacket.java
index 802a64a7f07f8be410d216bf974420982bbfb779..ce3118df139ec2061fb050b0842493a0717bd7b3 100644
--- a/src/main/java/puregero/multipaper/externalserverprotocol/PlayerCreatePacket.java
+++ b/src/main/java/puregero/multipaper/externalserverprotocol/PlayerCreatePacket.java
@@ -6,10 +6,7 @@ import net.minecraft.server.level.ServerPlayer;
 import net.minecraft.world.level.GameType;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
-import puregero.multipaper.ExternalPlayer;
-import puregero.multipaper.ExternalServerConnection;
-import puregero.multipaper.MultiPaper;
-import puregero.multipaper.MultiPaperInventoryHandler;
+import puregero.multipaper.*;
 
 import java.io.DataInputStream;
 import java.io.DataOutputStream;
@@ -86,5 +83,6 @@ public class PlayerCreatePacket extends ExternalServerPacket {
         connection.send(new SendPacketPacket(player, new ClientboundSetCarriedItemPacket(player.getInventory().selected)));
 
         MultiPaperInventoryHandler.sendFullInventoryUpdate(connection, player);
+        MultiPaperEnderChestHandler.sendFullEnderChestUpdate(connection, player);
     }
 }
