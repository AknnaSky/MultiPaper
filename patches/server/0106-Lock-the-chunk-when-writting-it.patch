From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PureGero <puregero@gmail.com>
Date: Sun, 16 Jan 2022 11:51:16 +1000
Subject: [PATCH] Lock the chunk when writting it


diff --git a/src/main/java/net/minecraft/server/level/ChunkMap.java b/src/main/java/net/minecraft/server/level/ChunkMap.java
index 94ae56c6e6235d6d5d51d41f4f92beb03b4fc22e..a27929fcf2646416704f31fe41450f5ce68715cd 100644
--- a/src/main/java/net/minecraft/server/level/ChunkMap.java
+++ b/src/main/java/net/minecraft/server/level/ChunkMap.java
@@ -1473,6 +1473,7 @@ public class ChunkMap extends ChunkStorage implements ChunkHolder.PlayerProvider
             asyncSaveData = ChunkSerializer.getAsyncSaveData(this.level, chunk);
         }
 
+        MultiPaper.willSaveChunk(level, chunk);
         this.level.asyncChunkTaskManager.scheduleChunkSave(chunkPos.x, chunkPos.z, com.destroystokyo.paper.io.PrioritizedTaskQueue.NORMAL_PRIORITY,
             asyncSaveData, chunk);
 
diff --git a/src/main/java/puregero/multipaper/MultiPaper.java b/src/main/java/puregero/multipaper/MultiPaper.java
index 7484388a468c7e475419581c0551b38a29c714cf..e67d62e75daba774ab655929ae9e213fd30f4a5c 100644
--- a/src/main/java/puregero/multipaper/MultiPaper.java
+++ b/src/main/java/puregero/multipaper/MultiPaper.java
@@ -498,6 +498,10 @@ public class MultiPaper {
         }
     }
 
+    public static void willSaveChunk(ServerLevel level, ChunkAccess chunk) {
+        getConnection().willSaveChunk(level.getWorld().getName(), chunk.locX, chunk.locZ);
+    }
+
     public static byte[] nbtToBytes(CompoundTag compoundTag) throws IOException {
         if (compoundTag == null) {
             return new byte[0];
diff --git a/src/main/java/puregero/multipaper/MultiPaperConnection.java b/src/main/java/puregero/multipaper/MultiPaperConnection.java
index b09c7b74d799dcc540353b2908b914d06955755e..7d5012ef2b98c1194beeacf6e496b7ebe8c02ae1 100644
--- a/src/main/java/puregero/multipaper/MultiPaperConnection.java
+++ b/src/main/java/puregero/multipaper/MultiPaperConnection.java
@@ -838,4 +838,17 @@ public class MultiPaperConnection extends Thread {
             e.printStackTrace();
         }
     }
+
+    public void willSaveChunk(String world, int cx, int cz) {
+        try {
+            DataOutputSender out = new DataOutputSender(this);
+            out.writeUTF("willSaveChunk");
+            out.writeUTF(world);
+            out.writeInt(cx);
+            out.writeInt(cz);
+            out.send(null);
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+    }
 }
