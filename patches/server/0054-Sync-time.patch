From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PureGero <puregero@gmail.com>
Date: Sun, 21 Nov 2021 01:24:00 +1000
Subject: [PATCH] Sync time


diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index 79b8236e1063409ca199e532215ea024e1b7671b..14bfbde68184c4bfec098be107b7a33a1f7e25ef 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -1572,6 +1572,7 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
             long worldTime = world.getGameTime();
             final ClientboundSetTimePacket worldPacket = new ClientboundSetTimePacket(worldTime, dayTime, doDaylight);
             for (Player entityhuman : world.players()) {
+                if (MultiPaper.isExternalPlayer(entityhuman)) continue; // MultiPaper - Don't send the time to external players
                 if (!(entityhuman instanceof ServerPlayer) || (tickCount + entityhuman.getId()) % 20 != 0) {
                     continue;
                 }
diff --git a/src/main/java/net/minecraft/server/commands/TimeCommand.java b/src/main/java/net/minecraft/server/commands/TimeCommand.java
index 29ccc4286786cdf0b11d7c28f6bfc453fb27fd45..7294bc593c7a24c1645e0e89dd7e7365dab118d1 100644
--- a/src/main/java/net/minecraft/server/commands/TimeCommand.java
+++ b/src/main/java/net/minecraft/server/commands/TimeCommand.java
@@ -11,6 +11,8 @@ import net.minecraft.server.level.ServerLevel;
 // CraftBukkit start
 import org.bukkit.Bukkit;
 import org.bukkit.event.world.TimeSkipEvent;
+import puregero.multipaper.MultiPaper;
+import puregero.multipaper.externalserverprotocol.TimeUpdatePacket;
 // CraftBukkit end
 
 public class TimeCommand {
@@ -61,6 +63,7 @@ public class TimeCommand {
             Bukkit.getPluginManager().callEvent(event);
             if (!event.isCancelled()) {
                 worldserver.setDayTime((long) worldserver.getDayTime() + event.getSkipAmount());
+                MultiPaper.broadcastPacketToExternalServers(new TimeUpdatePacket(worldserver, true)); // MultiPaper
             }
             // CraftBukkit end
         }
@@ -80,6 +83,7 @@ public class TimeCommand {
             Bukkit.getPluginManager().callEvent(event);
             if (!event.isCancelled()) {
                 worldserver.setDayTime(worldserver.getDayTime() + event.getSkipAmount());
+                MultiPaper.broadcastPacketToExternalServers(new TimeUpdatePacket(worldserver, true)); // MultiPaper
             }
             // CraftBukkit end
         }
diff --git a/src/main/java/net/minecraft/server/level/ServerLevel.java b/src/main/java/net/minecraft/server/level/ServerLevel.java
index 4445e0f91293c28767986626e01bd38d217d1dc1..e76787b6ab3083ebf5105dc1887a44c2f086353d 100644
--- a/src/main/java/net/minecraft/server/level/ServerLevel.java
+++ b/src/main/java/net/minecraft/server/level/ServerLevel.java
@@ -159,7 +159,9 @@ import org.bukkit.event.weather.LightningStrikeEvent;
 import org.bukkit.event.world.TimeSkipEvent;
 // CraftBukkit end
 import it.unimi.dsi.fastutil.ints.IntArrayList; // Paper
+import puregero.multipaper.MultiPaper;
 import puregero.multipaper.MultiPaperChunkHandler;
+import puregero.multipaper.externalserverprotocol.TimeUpdatePacket;
 
 public class ServerLevel extends Level implements WorldGenLevel {
 
@@ -588,6 +590,7 @@ public class ServerLevel extends Level implements WorldGenLevel {
                 getCraftServer().getPluginManager().callEvent(event);
                 if (!event.isCancelled()) {
                     this.setDayTime(this.getDayTime() + event.getSkipAmount());
+                    MultiPaper.broadcastPacketToExternalServers(new TimeUpdatePacket(this, true)); // MultiPaper
                 }
             }
 
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
index ac41bc23d2f7e16bbacdc9b33fcf6c0d706fa023..e4efac7522292897911eb822c7c6786eb01aa4bf 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
@@ -116,6 +116,8 @@ import org.bukkit.util.BoundingBox;
 import org.bukkit.util.Consumer;
 import org.bukkit.util.RayTraceResult;
 import org.bukkit.util.Vector;
+import puregero.multipaper.MultiPaper;
+import puregero.multipaper.externalserverprotocol.TimeUpdatePacket;
 
 public class CraftWorld extends CraftRegionAccessor implements World {
     public static final int CUSTOM_DIMENSION_OFFSET = 10;
@@ -794,6 +796,7 @@ public class CraftWorld extends CraftRegionAccessor implements World {
         }
 
         this.world.setDayTime(this.world.getDayTime() + event.getSkipAmount());
+        MultiPaper.broadcastPacketToExternalServers(new TimeUpdatePacket(world, true)); // MultiPaper
 
         // Forces the client to update to the new time immediately
         for (Player p : this.getPlayers()) {
diff --git a/src/main/java/puregero/multipaper/MultiPaper.java b/src/main/java/puregero/multipaper/MultiPaper.java
index d00001b5cba555bb6c2e79997a8e0efcaff08c2b..aabc035381c025604a34232c2de5d7aa7f753511 100644
--- a/src/main/java/puregero/multipaper/MultiPaper.java
+++ b/src/main/java/puregero/multipaper/MultiPaper.java
@@ -112,6 +112,11 @@ public class MultiPaper {
         });
 
         MultiPaperInventoryHandler.tick();
+        if (MinecraftServer.getServer().getTickCount() % 20 == 0) {
+            for (ServerLevel level : MinecraftServer.getServer().getAllLevels()) {
+                broadcastPacketToExternalServers(new TimeUpdatePacket(level));
+            }
+        }
     }
 
     public static void sendTickTime(long time, double tps) {
diff --git a/src/main/java/puregero/multipaper/externalserverprotocol/ExternalServerPacketSerializer.java b/src/main/java/puregero/multipaper/externalserverprotocol/ExternalServerPacketSerializer.java
index 414c122c5e3b1d32127a732bff661fd88a006036..526d780f0309b0b081761cf143c5fd547e6eea57 100644
--- a/src/main/java/puregero/multipaper/externalserverprotocol/ExternalServerPacketSerializer.java
+++ b/src/main/java/puregero/multipaper/externalserverprotocol/ExternalServerPacketSerializer.java
@@ -24,6 +24,7 @@ public class ExternalServerPacketSerializer {
         addPacket(SendTickListPacket.class, SendTickListPacket::new);
         addPacket(PlayerActionPacket.class, PlayerActionPacket::new);
         addPacket(PlayerInventoryUpdatePacket.class, PlayerInventoryUpdatePacket::new);
+        addPacket(TimeUpdatePacket.class, TimeUpdatePacket::new);
     }
 
     private static void addPacket(Class<? extends ExternalServerPacket> clazz, IOExceptionFunction<DataInputStream, ExternalServerPacket> deserializer) {
diff --git a/src/main/java/puregero/multipaper/externalserverprotocol/TimeUpdatePacket.java b/src/main/java/puregero/multipaper/externalserverprotocol/TimeUpdatePacket.java
new file mode 100644
index 0000000000000000000000000000000000000000..9926a03bd874129247fb7020f59bad270af300c4
--- /dev/null
+++ b/src/main/java/puregero/multipaper/externalserverprotocol/TimeUpdatePacket.java
@@ -0,0 +1,65 @@
+package puregero.multipaper.externalserverprotocol;
+
+import net.minecraft.server.level.ServerLevel;
+import net.minecraft.world.level.Level;
+import net.minecraft.world.level.storage.PrimaryLevelData;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
+import org.bukkit.Bukkit;
+import org.bukkit.World;
+import org.bukkit.craftbukkit.CraftWorld;
+import puregero.multipaper.ExternalServerConnection;
+
+import java.io.DataInputStream;
+import java.io.DataOutputStream;
+import java.io.IOException;
+
+public class TimeUpdatePacket extends ExternalServerPacket {
+
+    private static final Logger LOGGER = LogManager.getLogger(TimeUpdatePacket.class.getSimpleName());
+
+    private final String world;
+    private final long gameTime;
+    private final long dayTime;
+    private final boolean force;
+
+    public TimeUpdatePacket(Level level) {
+        this(level, false);
+    }
+
+    public TimeUpdatePacket(Level level, boolean force) {
+        this.world = level.getWorld().getName();
+        this.gameTime = level.getGameTime();
+        this.dayTime = level.getDayTime();
+        this.force = force;
+    }
+
+    public TimeUpdatePacket(DataInputStream in) throws IOException {
+        world = in.readUTF();
+        gameTime = in.readLong();
+        dayTime = in.readLong();
+        force = in.readBoolean();
+    }
+
+    @Override
+    public void write(DataOutputStream out) throws IOException {
+        out.writeUTF(world);
+        out.writeLong(gameTime);
+        out.writeLong(dayTime);
+        out.writeBoolean(force);
+    }
+
+    @Override
+    public void handle(ExternalServerConnection connection) {
+        World bukkitWorld = Bukkit.getWorld(world);
+        if (bukkitWorld != null) {
+            ServerLevel level = ((CraftWorld) bukkitWorld).getHandle();
+            if (force || level.getGameTime() < gameTime - 20) {
+                // We're more than a second behind, update us
+                LOGGER.info("Game time has fallen behind, updating from " + level.getGameTime() + " to " + gameTime);
+                ((PrimaryLevelData) level.levelData).setGameTime(gameTime);
+                ((PrimaryLevelData) level.levelData).setDayTime(dayTime);
+            }
+        }
+    }
+}
