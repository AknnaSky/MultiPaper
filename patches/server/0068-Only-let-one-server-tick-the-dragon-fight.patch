From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PureGero <puregero@gmail.com>
Date: Sun, 28 Nov 2021 16:34:05 +1000
Subject: [PATCH] Only let one server tick the dragon fight


diff --git a/src/main/java/net/minecraft/world/level/dimension/end/EndDragonFight.java b/src/main/java/net/minecraft/world/level/dimension/end/EndDragonFight.java
index ed6ff35a2112cea4faa6e1458d1effc40fce5dd2..d2838bac3519d1a38fd8f13915fa2c40c555d2ec 100644
--- a/src/main/java/net/minecraft/world/level/dimension/end/EndDragonFight.java
+++ b/src/main/java/net/minecraft/world/level/dimension/end/EndDragonFight.java
@@ -54,6 +54,7 @@ import net.minecraft.world.level.levelgen.feature.SpikeFeature;
 import net.minecraft.world.level.levelgen.feature.configurations.FeatureConfiguration;
 import net.minecraft.world.phys.AABB;
 import org.slf4j.Logger;
+import puregero.multipaper.MultiPaper;
 
 public class EndDragonFight {
     private static final Logger LOGGER = LogUtils.getLogger();
@@ -232,8 +233,10 @@ public class EndDragonFight {
     private void findOrCreateDragon() {
         List<? extends EnderDragon> list = this.level.getDragons();
         if (list.isEmpty()) {
+            if (MultiPaper.isChunkLocal(this.level.getChunkIfLoaded(0, 0))) { // MultiPaper - only respawn the dragon if we're ticking it
             LOGGER.debug("Haven't seen the dragon, respawning it");
             this.createNewDragon();
+            } // MultiPaper - only respawn the dragon if we're ticking it
         } else {
             LOGGER.debug("Haven't seen our dragon, but found another one to use.");
             this.dragonUUID = list.get(0).getUUID();
@@ -337,8 +340,10 @@ public class EndDragonFight {
         Set<ServerPlayer> set = Sets.newHashSet();
 
         for(ServerPlayer serverPlayer : this.level.getPlayers(VALID_PLAYER)) {
+            if (MultiPaper.isChunkLocal(this.level.getChunk(0, 0))) { // MultiPaper - only add players if we're ticking
             this.dragonEvent.addPlayer(serverPlayer);
             set.add(serverPlayer);
+            } // MultiPaper - only add players if we're ticking
         }
 
         Set<ServerPlayer> set2 = Sets.newHashSet(this.dragonEvent.getPlayers());
