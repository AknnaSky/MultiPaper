From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PureGero <puregero@gmail.com>
Date: Thu, 19 Oct 2023 17:33:20 +0900
Subject: [PATCH] Close vehicle inventories when transferring to another server


diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index ba4fe7c97d42b1438a852d0134e1b084ed626261..86c928f487f3a90af6429a96c89577d651297a38 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -10,6 +10,8 @@ import com.mojang.logging.LogUtils;
 import io.papermc.paper.chunk.system.scheduling.NewChunkHolder;
 import it.unimi.dsi.fastutil.objects.Object2DoubleArrayMap;
 import it.unimi.dsi.fastutil.objects.Object2DoubleMap;
+
+import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Collections;
 import java.util.HashSet;
@@ -77,6 +79,7 @@ import net.minecraft.tags.FluidTags;
 import net.minecraft.tags.TagKey;
 import net.minecraft.util.Mth;
 import net.minecraft.util.RandomSource;
+import net.minecraft.world.Container;
 import net.minecraft.world.InteractionHand;
 import net.minecraft.world.InteractionResult;
 import net.minecraft.world.Nameable;
@@ -125,6 +128,8 @@ import net.minecraft.world.phys.shapes.Shapes;
 import net.minecraft.world.phys.shapes.VoxelShape;
 import net.minecraft.world.scores.PlayerTeam;
 import net.minecraft.world.scores.Team;
+import org.bukkit.entity.HumanEntity;
+import org.bukkit.event.inventory.InventoryCloseEvent;
 import org.slf4j.Logger;
 import org.bukkit.Bukkit;
 import org.bukkit.Location;
@@ -3106,6 +3111,7 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
                     servers.add(newController.externalServerConnection.externalServer);
                 }
 
+                closeInventoriesRecursive(entity.getRootVehicle()); // Close any open inventories on the vehicle
                 MultiPaper.broadcastPacketToExternalServers(servers, () -> new EntityUpdateNBTPacket(entity.getRootVehicle()));
                 EntityUpdateWithDependenciesPacket.sendPassengersRecursive(packet -> MultiPaper.broadcastPacketToExternalServers(servers, packet), entity.getRootVehicle());
             }
@@ -3114,6 +3120,25 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
 
     }
 
+    // MultiPaper start - close inventories when an entity changes servers
+    private void closeInventoriesRecursive(Entity entity) {
+        if (entity instanceof Container container) {
+            List<HumanEntity> viewers = container.getViewers();
+            if (!viewers.isEmpty()) {
+                for (HumanEntity viewer : new ArrayList<>(container.getViewers())) {
+                    if (viewer instanceof CraftPlayer craftPlayer) {
+                        craftPlayer.closeInventory(InventoryCloseEvent.Reason.UNLOADED);
+                    }
+                }
+            }
+        }
+
+        for (Entity passenger : entity.getPassengers()) {
+            closeInventoriesRecursive(entity);
+        }
+    }
+    // MultiPaper end - close inventories when an entity changes servers
+
     public void stopRiding() {
         this.removeVehicle();
     }
