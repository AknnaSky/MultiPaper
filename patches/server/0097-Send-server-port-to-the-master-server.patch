From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PureGero <puregero@gmail.com>
Date: Wed, 5 Jan 2022 16:43:52 +1000
Subject: [PATCH] Send server port to the master server


diff --git a/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java b/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
index 8c392224518b61edad3dbe7ee5d23611fff247af..bb77f89e2e00cd29c1f331d630eed77160ca0d5d 100644
--- a/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
+++ b/src/main/java/net/minecraft/server/dedicated/DedicatedServer.java
@@ -268,6 +268,7 @@ public class DedicatedServer extends MinecraftServer implements ServerInterface
             this.setPort(dedicatedserverproperties.serverPort);
         }
         bindAddress = new java.net.InetSocketAddress(inetaddress, this.getPort());
+        MultiPaper.setPort(this.getPort()); // MultiPaper
         }
         // Paper end
 
diff --git a/src/main/java/puregero/multipaper/MultiPaper.java b/src/main/java/puregero/multipaper/MultiPaper.java
index 9d8d9275437fb5119dc1b79b1c642d5fc812ffc6..764242e3dcbb6b0c8dd278e3a9197aa7ad374670 100644
--- a/src/main/java/puregero/multipaper/MultiPaper.java
+++ b/src/main/java/puregero/multipaper/MultiPaper.java
@@ -560,4 +560,8 @@ public class MultiPaper {
     public static void broadcastPlayerAction(ServerPlayer player, ServerboundSetCarriedItemPacket packet) {
         broadcastPacketToExternalServers(new PlayerActionPacket(player, packet));
     }
+
+    public static void setPort(int port) {
+        getConnection().sendPort(port);
+    }
 }
diff --git a/src/main/java/puregero/multipaper/MultiPaperConnection.java b/src/main/java/puregero/multipaper/MultiPaperConnection.java
index cf8e7361ce0aa1c0adfed51cdb13374d6f077141..22aa3dacc2c9ca34aa8e2dd4c60ae84183a18f3a 100644
--- a/src/main/java/puregero/multipaper/MultiPaperConnection.java
+++ b/src/main/java/puregero/multipaper/MultiPaperConnection.java
@@ -40,6 +40,7 @@ public class MultiPaperConnection extends Thread {
     private final Map<Integer, Request> callbacks = new ConcurrentHashMap<>();
     private final Map<String, ExternalServer> serversMap = new ConcurrentHashMap<>();
     private String myName = null;
+    private int port = -1;
 
     public MultiPaperConnection() {
         super("MultiPaperConnection Thread");
@@ -113,6 +114,10 @@ public class MultiPaperConnection extends Thread {
                     }
                 }
 
+                if (port >= 0) {
+                    sendPort(port);
+                }
+
                 DataInputStream in = new DataInputStream(new BufferedInputStream(socket.getInputStream()));
                 while (!socket.isClosed()) {
                     int id = in.readInt();
@@ -817,4 +822,16 @@ public class MultiPaperConnection extends Thread {
             e.printStackTrace();
         }
     }
+
+    public void sendPort(int port) {
+        this.port = port;
+        try {
+            DataOutputSender out = new DataOutputSender(this);
+            out.writeUTF("setPort");
+            out.writeInt(port);
+            out.send(null);
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+    }
 }
